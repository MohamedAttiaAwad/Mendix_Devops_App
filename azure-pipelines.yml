trigger:
  branches:
    include:
      - main  # Adjust this to match your target branch

pool:
  name: 'mdx-agent'  # Ensure self-hosted agent is running

variables:
- group: MendixBuildConfig  # References the variable group from Azure DevOps
- group: MinioConfigGroup

steps:
  # ✅ Step 1: Checkout the code from Azure Repo
  - checkout: self  # This ensures the code from the repository is downloaded

  # ✅ Step 2: Build the Mendix Project
  - script: |
      echo "Starting Mendix Build..."

      REM Ensure build directory exists
      if not exist "C:\Builds" mkdir "C:\Builds"

      REM Find Mendix Project File (Automatically)
      for /r "$(BUILD_DIR)" %%F in (*.mpr) do set "PROJECT_PATH=%%F"

      echo "Detected Project File: %PROJECT_PATH%"

      REM Run Mendix Build
      mxbuild ^
      --target=package ^
      --java-home "$(JAVA_HOME)" ^
      --java-exe-path "$(JAVA_EXE_PATH)" ^
      --output "$(OUTPUT_PATH)" ^
      "%PROJECT_PATH%"
    displayName: 'Build Mendix App using mxbuild'


  # ✅ Step 3: Upload MDA File to MinIO and get Public URL
  - powershell: |
      Write-Output "Uploading .mda file to MinIO..."
      
      # Set up MinIO alias - for first time
      #& mc alias set myminio $env:MINIO_ENDPOINT $env:MINIO_ACCESS_KEY $env:MINIO_SECRET_KEY
      
      # Upload the file to MinIO
      & mc cp $env:TEST_OUTPUT_PATH "myminio/$env:MINIO_BUCKET_NAME/"

      # Get the public URL (ensure the previous command succeeded before running this)
      $PUBLIC_URLS = & mc share download "myminio/$env:MINIO_BUCKET_NAME/$env:FILE_NAME" | Select-String "http"
      if ($PUBLIC_URLS.Count -ge 2) {
          $PUBLIC_URL = $PUBLIC_URLS[1] -replace ".*(http[^\s]+).*", '$1'
          Write-Output "File uploaded. Second Public URL: $PUBLIC_URL"
      }
    displayName: 'Upload MDA to MinIO and Get Public URL'
    

  # ✅ Step 5: Apply Custom Resource (CR) to Kubernetes Cluster
  - powershell: |
      Write-Host "Applying Custom Resource (CR) to Kubernetes..."
      kubectl apply -f k8s/mendix-app-cr.yaml 
    displayName: 'Apply CR to Kubernetes Cluster'
